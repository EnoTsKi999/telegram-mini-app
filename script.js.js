// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;
tg.expand();

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ (–≤ localStorage)
let accounts = [];

// –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
let currentUser = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    loadAccounts();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const savedUser = localStorage.getItem('currentUser');
    if (savedUser) {
        currentUser = JSON.parse(savedUser);
        showProfile();
    } else {
        showMainMenu();
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ localStorage
function loadAccounts() {
    const saved = localStorage.getItem('serverAccounts');
    if (saved) {
        accounts = JSON.parse(saved);
        console.log('–ê–∫–∫–∞—É–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', accounts);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ localStorage
function saveAccounts() {
    localStorage.setItem('serverAccounts', JSON.stringify(accounts));
    console.log('–ê–∫–∫–∞—É–Ω—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', accounts);
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function saveCurrentUser() {
    if (currentUser) {
        localStorage.setItem('currentUser', JSON.stringify(currentUser));
    } else {
        localStorage.removeItem('currentUser');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function showMainMenu() {
    hideAllSections();
    document.getElementById('mainMenu').classList.add('active');
    updateStatus('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ');
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
function showRegister() {
    hideAllSections();
    document.getElementById('registerSection').classList.add('active');
    updateStatus('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.getElementById('regNickname').value = '';
    document.getElementById('regPassword').value = '';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ö–æ–¥
function showLogin() {
    hideAllSections();
    document.getElementById('loginSection').classList.add('active');
    updateStatus('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞');
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.getElementById('loginNickname').value = '';
    document.getElementById('loginPassword').value = '';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
function showProfile() {
    hideAllSections();
    document.getElementById('profileSection').classList.add('active');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
    document.getElementById('profileNickname').textContent = currentUser.nickname;
    document.getElementById('profileId').textContent = currentUser.playerId;
    document.getElementById('profileStatus').textContent = currentUser.status;
    document.getElementById('profileRegDate').textContent = currentUser.registrationDate;
    
    updateStatus(`–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω: ${currentUser.nickname}`);
}

// –°–∫—Ä—ã—Ç—å –≤—Å–µ —Å–µ–∫—Ü–∏–∏
function hideAllSections() {
    document.querySelectorAll('.section').forEach(section => {
        section.classList.remove('active');
    });
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å
function updateStatus(text) {
    document.getElementById('statusText').textContent = text;
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
function register() {
    const nickname = document.getElementById('regNickname').value.trim();
    const password = document.getElementById('regPassword').value.trim();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!nickname) {
        showAlert('‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º!');
        return;
    }
    
    if (!password) {
        showAlert('‚ùå –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å!');
        return;
    }
    
    if (nickname.length < 3) {
        showAlert('‚ùå –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤!');
        return;
    }
    
    if (password.length < 4) {
        showAlert('‚ùå –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 4 —Å–∏–º–≤–æ–ª–æ–≤!');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ –Ω–∏–∫–Ω–µ–π–º
    if (accounts.find(acc => acc.nickname === nickname)) {
        showAlert('‚ùå –≠—Ç–æ—Ç –Ω–∏–∫–Ω–µ–π–º —É–∂–µ –∑–∞–Ω—è—Ç!');
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
    const newAccount = {
        nickname: nickname,
        password: password,
        playerId: generatePlayerId(),
        registrationDate: new Date().toLocaleDateString('ru-RU'),
        status: '–ê–∫—Ç–∏–≤–µ–Ω'
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–∫–∫–∞—É–Ω—Ç
    accounts.push(newAccount);
    saveAccounts();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Ö–æ–¥–∏–º
    currentUser = newAccount;
    saveCurrentUser();
    
    showAlert(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${nickname}!`);
    showProfile();
    sendToBot('registration');
}

// –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç
function login() {
    const nickname = document.getElementById('loginNickname').value.trim();
    const password = document.getElementById('loginPassword').value.trim();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!nickname || !password) {
        showAlert('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
        return;
    }
    
    // –ò—â–µ–º –∞–∫–∫–∞—É–Ω—Ç
    const account = accounts.find(acc => 
        acc.nickname === nickname && acc.password === password
    );
    
    if (account) {
        // –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
        currentUser = account;
        saveCurrentUser();
        
        showAlert(`‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!\n–ü—Ä–∏–≤–µ—Ç, ${nickname}!`);
        showProfile();
        sendToBot('login');
    } else {
        showAlert('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –∏–ª–∏ –ø–∞—Ä–æ–ª—å!');
        vibrate();
    }
}

// –í—ã—Ö–æ–¥
function logout() {
    currentUser = null;
    saveCurrentUser();
    showAlert('üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!');
    showMainMenu();
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –∏–≥—Ä–æ–∫–∞
function generatePlayerId() {
    return 'PL' + Date.now().toString().slice(-8) + Math.random().toString(36).substr(2, 3).toUpperCase();
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function showAlert(message) {
    tg.showAlert(message);
}

function vibrate() {
    tg.HapticFeedback.impactOccurred('heavy');
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞
function sendToBot(action) {
    const data = {
        action: action,
        nickname: currentUser.nickname,
        playerId: currentUser.playerId,
        registrationDate: currentUser.registrationDate,
        timestamp: new Date().toISOString()
    };
    
    tg.sendData(JSON.stringify(data));
    console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –±–æ—Ç—É:', data);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
tg.BackButton.onClick(() => {
    if (document.getElementById('profileSection').classList.contains('active')) {
        logout();
    } else {
        showMainMenu();
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', initApp);
